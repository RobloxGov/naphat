// ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏° ----------
function randInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
function randChoice(arr) {
    return arr[Math.floor(Math.random() * arr.length)];
}

// ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á pi ‡πÄ‡∏õ‡πá‡∏ô œÄ ----------
function replacePi(inputId) {
    const input = document.getElementById(inputId);
    input.addEventListener('input', () => {
        input.value = input.value.replace(/\bpi\b/gi, "œÄ");
    });
}

// ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏µ‡πÇ‡∏Å‡∏ì ----------
let funcLabel = randChoice(['‡πÑ‡∏ã‡∏ô‡πå', '‡πÇ‡∏Ñ‡πÑ‡∏ã‡∏ô‡πå']);
let funcType = funcLabel === '‡πÑ‡∏ã‡∏ô‡πå' ? 'sin' : 'cos';
let A = randInt(1, 5);
let D = randInt(-3, 3);
let period = randInt(2, 6);
let B = (2 * Math.PI) / period;
let C = randInt(-3, 3);

let yMax = A + D;
let yMin = -A + D;
let yIntercept = funcType === 'sin'
    ? A * Math.sin(-C) + D
    : A * Math.cos(-C) + D;
yIntercept = Math.round(yIntercept);

// ---------- ‡∏Ñ‡∏±‡∏î‡∏Å‡∏£‡∏≠‡∏á startShape ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ----------
let validShapes;
if (funcType === 'sin') {
    // sin(x) ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏•‡∏≤‡∏á ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏•‡∏á ‡∏´‡∏£‡∏∑‡∏≠ ‡∏•‡∏î‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô
    validShapes = ['‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏•‡∏á', '‡∏•‡∏î‡∏•‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô'];
} else {
    // cos(x) ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ‚Üí ‡∏•‡∏î‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏•‡∏á, ‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô
    let startY = A * Math.cos(C) + D;
    if (startY > D) {
        validShapes = ['‡∏•‡∏î‡∏•‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏•‡∏á'];
    } else if (startY < D) {
        validShapes = ['‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô'];
    } else {
        validShapes = ['‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏•‡∏á', '‡∏•‡∏î‡∏•‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô']; // ‡∏Å‡∏•‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü
    }
}

let startShape = randChoice(validShapes);

let trigQuestion = `‡∏à‡∏á‡∏´‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏π‡∏õ${funcLabel} ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÄ‡∏õ‡πá‡∏ô ${D}, ‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠ ${yMax}, ‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠ ${yMin}, ‡∏à‡∏∏‡∏î‡∏ï‡∏±‡∏î‡πÅ‡∏Å‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà ${yIntercept}, ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà ${startShape}, ‡∏°‡∏µ‡∏Ñ‡∏≤‡∏ö‡∏¢‡∏≤‡∏ß‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ${period}, ‡πÅ‡∏Å‡∏ô‡∏ô‡∏≠‡∏ô‡∏Ñ‡∏∑‡∏≠ x ‡πÅ‡∏Å‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏∑‡∏≠ y`;
document.getElementById("trig-question").innerText = trigQuestion;

// ---------- ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏µ‡πÇ‡∏Å‡∏ì ----------
function checkTrig() {
    let ans = document.getElementById("trig-answer").value.trim().toLowerCase();
    ans = ans.replace(/\s+/g, '');

    if (!ans.startsWith("y=")) {
        document.getElementById("trig-result").innerText = "‚ùå ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ y =";
        return;
    }
    if (!ans.includes(funcType)) {
        document.getElementById("trig-result").innerText = `‚ùå ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ${funcType} ‡πÉ‡∏ô‡∏™‡∏°‡∏Å‡∏≤‡∏£`;
        return;
    }

    document.getElementById("trig-result").innerText = "‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏ú‡πà‡∏≤‡∏ô (‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î)";

    // log ‡πÄ‡∏â‡∏•‡∏¢
    let trigFuncText = `y = ${A}${funcType}(${B.toFixed(2)}x + ${C}) + ${D}`;
    console.log("üìå ‡πÄ‡∏â‡∏•‡∏¢‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏µ‡πÇ‡∏Å‡∏ì:", trigFuncText);
}

// ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ñ‡∏ß‡∏≠‡∏î‡∏£‡∏≤‡∏ï‡∏¥‡∏Å ----------
let points = [
    [randInt(-5, 5), randInt(-5, 15)],
    [randInt(-5, 5), randInt(-5, 15)],
    [randInt(-5, 5), randInt(-5, 15)]
];
let quadQuestion = `‡∏à‡∏á‡∏´‡∏≤‡∏™‡∏°‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≠‡∏î‡∏£‡∏≤‡∏ï‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏à‡∏∏‡∏î (${points[0]}), (${points[1]}), (${points[2]})`;
document.getElementById("quad-question").innerText = quadQuestion;

// ---------- ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≠‡∏î‡∏£‡∏≤‡∏ï‡∏¥‡∏Å ----------
function checkQuad() {
    let ans = document.getElementById("quad-answer").value.trim().toLowerCase();
    if (!ans.includes("x")) {
        document.getElementById("quad-result").innerText = "‚ùå ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ x";
        return;
    }
    document.getElementById("quad-result").innerText = "‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏ú‡πà‡∏≤‡∏ô (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á)";
    console.log("üìå ‡∏à‡∏∏‡∏î‡∏Ñ‡∏ß‡∏≠‡∏î‡∏£‡∏≤‡∏ï‡∏¥‡∏Å:", points);
}

// ---------- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏õ‡∏•‡∏á pi ‡πÉ‡∏ô input ----------
replacePi("trig-answer");
replacePi("quad-answer");
