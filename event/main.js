// ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏° ----------
function randInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
function randChoice(arr) {
    return arr[Math.floor(Math.random() * arr.length)];
}

// ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á pi ‡πÄ‡∏õ‡πá‡∏ô œÄ ----------
function replacePi(inputId) {
    const input = document.getElementById(inputId);
    input.addEventListener('input', () => {
        input.value = input.value.replace(/\bpi\b/gi, "œÄ");
    });
}

// ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏µ‡πÇ‡∏Å‡∏ì ----------
let funcType = randChoice(['‡πÑ‡∏ã‡∏ô‡πå', '‡πÇ‡∏Ñ‡πÑ‡∏ã‡∏ô‡πå']);
let A = randInt(1, 5);
let D = randInt(-3, 3);
let period = randInt(2, 6);
let B = (2 * Math.PI) / period;
let C = randInt(-3, 3);

let yMax = A + D;
let yMin = -A + D;
let yIntercept = funcType === '‡πÑ‡∏ã‡∏ô‡πå'
    ? A * Math.sin(-C) + D
    : A * Math.cos(-C) + D;
yIntercept = Math.round(yIntercept);

let startShape = randChoice([
    '‡∏•‡∏î‡∏•‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô',
    '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô',
    '‡∏•‡∏î‡∏•‡∏á‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏•‡∏á',
    '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πâ‡∏≤‡∏•‡∏á'
]);

let trigQuestion = `‡∏à‡∏á‡∏´‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏π‡∏õ${funcType}‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡πÄ‡∏õ‡πá‡∏ô ${D}, ‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠ ${yMax}, ‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠ ${yMin}, ‡∏à‡∏∏‡∏î‡∏ï‡∏±‡∏î‡πÅ‡∏Å‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà ${yIntercept}, ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà ${startShape}, ‡∏°‡∏µ‡∏Ñ‡∏≤‡∏ö‡∏¢‡∏≤‡∏ß‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ${period}, ‡πÅ‡∏Å‡∏ô‡∏ô‡∏≠‡∏ô‡∏Ñ‡∏∑‡∏≠ x ‡πÅ‡∏Å‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏∑‡∏≠ y`;
document.getElementById("trig-question").innerText = trigQuestion;

// ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ñ‡∏ß‡∏≠‡∏î‡∏£‡∏≤‡∏ï‡∏¥‡∏Å ----------
let points = [
    [randInt(-5, 5), randInt(-5, 15)],
    [randInt(-5, 5), randInt(-5, 15)],
    [randInt(-5, 5), randInt(-5, 15)]
];
let quadQuestion = `‡∏à‡∏á‡∏´‡∏≤‡∏™‡∏°‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≠‡∏î‡∏£‡∏≤‡∏ï‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏à‡∏∏‡∏î (${points[0]}), (${points[1]}), (${points[2]})`;
document.getElementById("quad-question").innerText = quadQuestion;

// ---------- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏õ‡∏•‡∏á pi ‡πÉ‡∏ô input ----------
replacePi("trig-answer");
replacePi("quad-answer");

// ---------- log ‡πÄ‡∏â‡∏•‡∏¢‡∏•‡∏á console ----------
let trigFuncText = funcType === '‡πÑ‡∏ã‡∏ô‡πå'
    ? `y = ${A}sin(${B.toFixed(2)}x + ${C}) + ${D}`
    : `y = ${A}cos(${B.toFixed(2)}x + ${C}) + ${D}`;

console.log("üîç ‡πÄ‡∏â‡∏•‡∏¢‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏µ‡πÇ‡∏Å‡∏ì:", trigFuncText);
console.log("üîç ‡∏à‡∏∏‡∏î‡∏Ñ‡∏ß‡∏≠‡∏î‡∏£‡∏≤‡∏ï‡∏¥‡∏Å:", points);
